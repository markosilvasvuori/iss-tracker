{"version":3,"sources":["components/UI/LoadingIcon.module.css","components/Map/MapControls.module.css","components/Map/Map.module.css","components/UI/LoadingIcon.js","components/Map/MapControls.js","components/ISS/IssMarker.js","components/Map/Map.js","App.js","index.js"],"names":["module","exports","LoadingIcon","className","classes","MapControls","props","checkbox","type","defaultChecked","onClick","IssMarker","context","useContext","MapContext","longitude","latitude","viewport","project","markerStyle","position","padding","borderRadius","background","boxShadow","color","fontWeight","fontSize","left","top","style","Map","useState","issData","setIssData","width","height","zoom","setViewport","dragPan","dragRotate","touchRotate","keyboard","settings","setSettings","isFollowingIss","setIsFollowingIss","isLoading","setIsLoading","useEffect","intervalId","setInterval","a","fetch","response","json","issLocation","clearInterval","map","mapStyle","onViewportChange","nextViewport","mapboxApiAccessToken","process","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,eAAe,kCAAkC,eAAe,oC,mBCAlFD,EAAOC,QAAU,CAAC,eAAe,kCAAkC,SAAW,gC,mBCA9ED,EAAOC,QAAU,CAAC,IAAM,iBAAiB,kBAAkB,+B,gLCY5CC,EATK,WAChB,OACI,eAAC,WAAD,WACI,qBAAKC,UAAWC,IAAQ,kBACxB,mBAAGD,UAAWC,IAAQ,gBAAtB,iC,iBCSGC,EAfK,SAACC,GAKjB,OACI,qBAAKH,UAAWC,IAAQ,gBAAxB,SACI,wBAAOD,UAAWC,IAAQG,SAA1B,UACI,uBAAOC,KAAK,WAAWC,gBAAc,EAACC,QAP3B,WACnBJ,EAAMI,aAOE,oDCiBDC,EAzBG,SAACL,GACf,IAAMM,EAAUC,qBAAWC,KACpBC,EAAuBT,EAAvBS,UAAWC,EAAYV,EAAZU,SAClB,EAAeJ,EAAQK,SAASC,QAAQ,CAACH,EAAWC,IAApD,mBAEMG,EAAc,CAChBC,SAAU,WACVC,QAAS,OACTC,aAAc,MACdC,WAAY,UACZC,UAAW,qCACXC,MAAO,OACPC,WAAY,OACZC,SAAU,WACVC,KAXJ,KAYIC,IAZJ,MAeA,OACI,qBAAKC,MAAOX,EAAZ,kB,iBCsFOY,EApGH,WACR,MAA8BC,mBAAS,CACnChB,SAAU,EACVD,UAAW,IAFf,mBAAOkB,EAAP,KAAgBC,EAAhB,KAIA,EAAgCF,mBAAS,CACrCG,MAAO,OACPC,OAAQ,OACRpB,SAAU,EACVD,UAAW,EACXsB,KAAM,IALV,mBAAOpB,EAAP,KAAiBqB,EAAjB,KAOA,EAAgCN,mBAAS,CACrCO,SAAS,EACTC,YAAY,EACZC,aAAa,EACbC,UAAU,IAJd,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,EAA4CZ,oBAAS,GAArD,mBAAOa,EAAP,KAAuBC,EAAvB,KACA,EAAkCd,oBAAS,GAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KACA,EAAwChB,oBAAS,GAAjD,6BAGAiB,qBAAU,WACN,IAAMC,EAAaC,YAAW,sBAAE,8BAAAC,EAAA,sEACLC,MAAM,kDADD,cACtBC,EADsB,gBAEFA,EAASC,OAFP,OAEtBC,EAFsB,OAG5BtB,EAAW,CACPlB,SAAUwC,EAAYxC,SACtBD,UAAWyC,EAAYzC,YAEvB8B,GACAP,EAAY,2BACLrB,GADI,IAEPD,SAAUwC,EAAYxC,SACtBD,UAAWyC,EAAYzC,aAI/BiC,GAAa,GAfe,2CAgB7B,KAEH,OAAO,kBAAMS,cAAcP,MAC5B,CAACjB,EAAShB,EAAU4B,IAEvBI,qBAAU,WACFJ,IACAD,EAAY,CACRL,SAAS,EACTC,YAAY,EACZC,aAAa,EACbC,UAAU,IAEdJ,EAAY,2BACLrB,GADI,IAEPD,SAAUiB,EAAQjB,SAClBD,UAAWkB,EAAQlB,cAItB8B,GACDD,EAAY,CACRL,SAAS,EACTC,YAAY,EACZC,aAAa,EACbC,UAAU,MAGnB,CAACG,IAUJ,OACI,sBAAK1C,UAAWC,IAAQsD,IAAxB,UACKX,GAAa,cAAC,EAAD,KACZA,GAAa,cAAC,EAAD,CAAarC,QAPX,WACrBoC,GAAmBD,OAObE,GACE,cAAC,IAAD,uCACQ9B,GACA0B,GAFR,IAGIgB,SAAU,6DACVC,iBAAkB,SAAAC,GAAY,OAAIvB,EAAYuB,IAC9CC,qBAnEAC,wGA8DJ,SAOI,cAAC,EAAD,CACIhD,UAAWkB,EAAQlB,UACnBC,SAAUiB,EAAQjB,kBC1F3BgD,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.916d7b1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-icon\":\"LoadingIcon_loading-icon__diSIJ\",\"loading-text\":\"LoadingIcon_loading-text__24u_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map-controls\":\"MapControls_map-controls__mg0HU\",\"checkbox\":\"MapControls_checkbox__X3cLJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Map_map__OiFxR\",\"controls-button\":\"Map_controls-button__2QuqZ\"};","import React, { Fragment } from 'react';\r\n\r\nimport classes from './LoadingIcon.module.css';\r\n\r\nconst LoadingIcon = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className={classes[\"loading-icon\"]}></div>\r\n            <p className={classes[\"loading-text\"]}>Locating ISS...</p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default LoadingIcon;","import classes from './MapControls.module.css';\r\n\r\nconst MapControls = (props) => {\r\n    const onClickHandler = () => {\r\n        props.onClick();\r\n    };\r\n\r\n    return (\r\n        <div className={classes[\"map-controls\"]}>\r\n            <label className={classes.checkbox}>\r\n                <input type=\"checkbox\" defaultChecked onClick={onClickHandler} />\r\n                <span>Center ISS</span>\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapControls;","import { useContext } from 'react';\r\nimport { MapContext } from \"react-map-gl\";\r\n\r\nconst IssMarker = (props) => {\r\n    const context = useContext(MapContext);\r\n    const {longitude, latitude} = props;\r\n    const [x, y] = context.viewport.project([longitude, latitude]);\r\n\r\n    const markerStyle = {\r\n        position: 'absolute',\r\n        padding: '15px',\r\n        borderRadius: '50%',\r\n        background: '#e8630a',\r\n        boxShadow: '0 0 14px 1px rgba(232, 99, 10, .9)',\r\n        color: '#222',\r\n        fontWeight: 'bold',\r\n        fontSize: '0.875rem',\r\n        left: x,\r\n        top: y\r\n    };\r\n\r\n    return (\r\n        <div style={markerStyle}>\r\n            ISS\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IssMarker;","import { useState, useEffect } from 'react';\r\n\r\nimport ReactMapGL from 'react-map-gl';\r\nimport LoadingIcon from '../UI/LoadingIcon';\r\nimport MapControls from './MapControls';\r\nimport IssMarker from '../ISS/IssMarker';\r\nimport classes from './Map.module.css';\r\n\r\nconst Map = () => {\r\n    const [issData, setIssData] = useState({\r\n        latitude: 0,\r\n        longitude: 0\r\n    });\r\n    const [viewport, setViewport] = useState({\r\n        width: 100 + '%',\r\n        height: 100 + '%',\r\n        latitude: 0,\r\n        longitude: 0,\r\n        zoom: 3\r\n    });\r\n    const [settings, setSettings] = useState({\r\n        dragPan: false,\r\n        dragRotate: false,\r\n        touchRotate: false,\r\n        keyboard: false\r\n    });\r\n    const [isFollowingIss, setIsFollowingIss] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [showControls, setShowControls] = useState(false);\r\n    const API_KEY = process.env.REACT_APP_ISS_API_KEY;\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval( async () => {\r\n            const response = await fetch('https://api.wheretheiss.at/v1/satellites/25544');\r\n            const issLocation = await response.json();\r\n            setIssData({\r\n                latitude: issLocation.latitude,\r\n                longitude: issLocation.longitude\r\n            });\r\n            if (isFollowingIss) {\r\n                setViewport({\r\n                    ...viewport,\r\n                    latitude: issLocation.latitude,\r\n                    longitude: issLocation.longitude\r\n                });\r\n            }\r\n            \r\n            setIsLoading(false);\r\n        }, 3000);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [issData, viewport, isFollowingIss]);\r\n\r\n    useEffect(() => {\r\n        if (isFollowingIss) {\r\n            setSettings({\r\n                dragPan: false,\r\n                dragRotate: false,\r\n                touchRotate: false,\r\n                keyboard: false\r\n            }); \r\n            setViewport({\r\n                ...viewport,\r\n                latitude: issData.latitude,\r\n                longitude: issData.longitude\r\n            });\r\n        }\r\n\r\n        if (!isFollowingIss) {\r\n            setSettings({\r\n                dragPan: true,\r\n                dragRotate: true,\r\n                touchRotate: true,\r\n                keyboard: true\r\n            });        \r\n        }\r\n    }, [isFollowingIss]);\r\n\r\n    const showControlsHandler = () => {\r\n        setShowControls(!showControls);\r\n    };\r\n\r\n    const followIssHandler = (  ) => {\r\n        setIsFollowingIss(!isFollowingIss);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.map}>\r\n            {isLoading && <LoadingIcon />}\r\n            {!isLoading && <MapControls onClick={followIssHandler} /> }\r\n            {!isLoading &&\r\n                <ReactMapGL\r\n                    {...viewport}\r\n                    {...settings}\r\n                    mapStyle={'mapbox://styles/markosilvasvuori/ckvjje8ie084v14ou6z0e575x'}\r\n                    onViewportChange={nextViewport => setViewport(nextViewport)}\r\n                    mapboxApiAccessToken={API_KEY}\r\n                >\r\n                    <IssMarker \r\n                        longitude={issData.longitude} \r\n                        latitude={issData.latitude} \r\n                    />\r\n                </ReactMapGL>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Map;","import Map from './components/Map/Map';\n\nfunction App() {\n  return (\n    <div>\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}