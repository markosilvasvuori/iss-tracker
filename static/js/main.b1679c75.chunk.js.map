{"version":3,"sources":["components/Map/Map.module.css","components/ISS/IssMarker.js","components/Map/Map.js","App.js","index.js"],"names":["module","exports","IssMarker","props","context","useContext","MapContext","longitude","latitude","viewport","project","markerStyle","position","padding","borderRadius","background","left","top","style","Map","useState","issData","setIssData","width","height","zoom","setViewport","dragPan","dragRotate","scrollZoom","touchZoom","touchRotate","doubleClickZoom","keyboard","settings","setSettings","isFollowingIss","setIsFollowingIss","useEffect","intervalId","setInterval","fetch","then","response","json","data","clearInterval","className","classes","map","onClick","console","log","mapStyle","onViewportChange","nextViewport","mapboxApiAccessToken","process","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,IAAM,mB,4JCuCTC,EArCG,SAACC,GAcf,IAAMC,EAAUC,qBAAWC,KACpBC,EAAuBJ,EAAvBI,UAAWC,EAAYL,EAAZK,SAClB,EAAeJ,EAAQK,SAASC,QAAQ,CAACH,EAAWC,IAApD,mBAKMG,EAAc,CAChBC,SAAU,WACVC,QAAS,MACTC,aAAc,OACdC,WAAY,SACZC,KAVJ,KAWIC,IAXJ,MAcA,OACI,qBAAKC,MAAOP,EAAZ,kB,iBC4DOQ,EAxFH,WACR,MAA8BC,mBAAS,CACnCZ,SAAU,EACVD,UAAW,IAFf,mBAAOc,EAAP,KAAgBC,EAAhB,KAIA,EAAgCF,mBAAS,CACrCG,MAAO,OACPC,OAAQ,OACRhB,SAAU,EACVD,UAAW,EACXkB,KAAM,IALV,mBAAOhB,EAAP,KAAiBiB,EAAjB,KAOA,EAAgCN,mBAAS,CACrCO,SAAS,EACTC,YAAY,EACZC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,iBAAiB,EACjBC,UAAU,IAPd,mBAAOC,EAAP,KAAiBC,EAAjB,KASA,EAA4Cf,oBAAS,GAArD,mBAAOgB,EAAP,KAAuBC,EAAvB,KAGAC,qBAAU,WACN,IAAMC,EAAaC,aAAY,WAC3BC,MAAM,kDACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIvB,EAAW,CACrBd,SAAUqC,EAAKrC,SACfD,UAAWsC,EAAKtC,eAGpBmB,EAAY,2BACLjB,GADI,IAEPD,SAAUa,EAAQb,SAClBD,UAAWc,EAAQd,eAExB,KAEH,OAAO,kBAAMuC,cAAcP,MAC5B,CAAClB,EAASZ,IA8Bb,OACI,sBAAKsC,UAAWC,IAAQC,IAAxB,UACI,wBAAQC,QA9BS,WACrBb,GAAmBD,GACnBe,QAAQC,IAAIhB,GACRA,GACAD,EAAY,CACRR,SAAS,EACTC,YAAY,EACZC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,iBAAiB,EACjBC,UAAU,IAIbG,GACDD,EAAY,CACRR,SAAS,EACTC,YAAY,EACZC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,iBAAiB,EACjBC,UAAU,KAOd,wBACA,cAAC,IAAD,qCACIoB,SAAU,6DACVC,iBAAkB,SAAAC,GAAY,OAAI7B,EAAY6B,KAC1C9C,GACAyB,GAJR,IAMIsB,qBA1DIC,wGAoDR,SAQI,cAAC,EAAD,CAAWlD,UAAWc,EAAQd,UAAWC,SAAUa,EAAQb,kB,MC5E5DkD,MATf,WACE,OACE,sBAAKX,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,QCFNY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b1679c75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Map_map__OiFxR\"};","import { useContext, useState, useEffect } from 'react';\r\nimport { MapContext } from \"react-map-gl\";\r\n\r\nconst IssMarker = (props) => {\r\n    // const [issData, setIssData] = useState();\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const fetchData = () => {\r\n    //         fetch('https://api.wheretheiss.at/v1/satellites/25544')\r\n    //         .then(response => response.json())\r\n    //         .then(data => setIssData(data));\r\n    //     }\r\n        \r\n    //     fetchData();\r\n    // }, []);\r\n    \r\n    const context = useContext(MapContext);\r\n    const {longitude, latitude} = props;\r\n    const [x, y] = context.viewport.project([longitude, latitude]);\r\n\r\n    // const x = issData.longitude;\r\n    // const y = issData.latitude;\r\n\r\n    const markerStyle = {\r\n        position: 'absolute',\r\n        padding: '6px',\r\n        borderRadius: '15px',\r\n        background: 'orange',\r\n        left: x,\r\n        top: y\r\n    };\r\n\r\n    return (\r\n        <div style={markerStyle}>\r\n            ISS\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IssMarker;","import { useState, useEffect } from 'react';\r\n\r\nimport ReactMapGL from 'react-map-gl';\r\nimport IssMarker from '../ISS/IssMarker';\r\nimport classes from './Map.module.css';\r\n\r\nconst Map = () => {\r\n    const [issData, setIssData] = useState({\r\n        latitude: 0,\r\n        longitude: 0\r\n    });\r\n    const [viewport, setViewport] = useState({\r\n        width: 100 + '%',\r\n        height: 100 + '%',\r\n        latitude: 0,\r\n        longitude: 0,\r\n        zoom: 3\r\n    });\r\n    const [settings, setSettings] = useState({\r\n        dragPan: false,\r\n        dragRotate: false,\r\n        scrollZoom: false,\r\n        touchZoom: false,\r\n        touchRotate: false,\r\n        doubleClickZoom: false,\r\n        keyboard: false\r\n    });\r\n    const [isFollowingIss, setIsFollowingIss] = useState(true);\r\n    const API_KEY = process.env.REACT_APP_ISS_API_KEY;\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            fetch('https://api.wheretheiss.at/v1/satellites/25544')\r\n            .then(response => response.json())\r\n            .then(data => setIssData({\r\n                latitude: data.latitude,\r\n                longitude: data.longitude\r\n            }));\r\n\r\n            setViewport({\r\n                ...viewport,\r\n                latitude: issData.latitude,\r\n                longitude: issData.longitude\r\n            });\r\n        }, 3000);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [issData, viewport]);\r\n\r\n    const followIssHandler = () => {\r\n        setIsFollowingIss(!isFollowingIss);\r\n        console.log(isFollowingIss)\r\n        if (isFollowingIss) {\r\n            setSettings({\r\n                dragPan: false,\r\n                dragRotate: false,\r\n                scrollZoom: false,\r\n                touchZoom: false,\r\n                touchRotate: false,\r\n                doubleClickZoom: false,\r\n                keyboard: false\r\n            });        \r\n        }\r\n\r\n        if (!isFollowingIss) {\r\n            setSettings({\r\n                dragPan: true,\r\n                dragRotate: true,\r\n                scrollZoom: true,\r\n                touchZoom: true,\r\n                touchRotate: true,\r\n                doubleClickZoom: true,\r\n                keyboard: true\r\n            });        \r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.map}>\r\n            <button onClick={followIssHandler}>Follow ISS</button>\r\n            <ReactMapGL\r\n                mapStyle={'mapbox://styles/markosilvasvuori/ckvjje8ie084v14ou6z0e575x'}\r\n                onViewportChange={nextViewport => setViewport(nextViewport)}\r\n                {...viewport}\r\n                {...settings}\r\n                // longitude={issData.longitude} latitude={issData.latitude}\r\n                mapboxApiAccessToken={API_KEY}\r\n            >\r\n                <IssMarker longitude={issData.longitude} latitude={issData.latitude} />\r\n            </ReactMapGL>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Map;","import Map from './components/Map/Map';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>ISS Tracker</h1>\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}